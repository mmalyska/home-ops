kube-prometheus-stack:
  kubeControllerManager:
    enabled: true
  kubeEtcd:
    enabled: true
  kubeProxy:
    enabled: true
  kubeScheduler:
    enabled: true
  grafana:
    deploymentStrategy:
      type: Recreate
    persistence:
      enabled: true
      size: 10Gi
      accessModes: ["ReadWriteOnce"]
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: true
            editable: false
            options:
              path: /var/lib/grafana/dashboards/default
          - name: 'device'
            orgId: 1
            folder: 'Devices Metrics'
            type: file
            disableDeletion: true
            editable: false
            options:
              path: /var/lib/grafana/dashboards/device
          - name: 'grafana-dashboards-kubernetes'
            orgId: 1
            folder: 'Kubernetes'
            type: file
            disableDeletion: true
            editable: false
            options:
              path: /var/lib/grafana/dashboards/grafana-dashboards-kubernetes
    dashboardsConfigMaps:
      device: "device-dashboards"
    dashboards:
      grafana-dashboards-kubernetes:
        k8s-system-api-server:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
          token: ''
        k8s-system-coredns:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
          token: ''
        k8s-views-global:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
          token: ''
        k8s-views-namespaces:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
          token: ''
        k8s-views-nodes:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
          token: ''
        k8s-views-pods:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
          token: ''
        cncf:
          url: https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/docs/src/samples/monitoring/grafana-dashboard.json
          token: ''
        argocd:
          url: https://raw.githubusercontent.com/argoproj/argo-cd/master/examples/dashboard.json
          token: ''
  alertmanager:
    config:
      global:
        resolve_timeout: 5m
    alertmanagerSpec:
      storage:
        volumeClaimTemplate:
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 25Gi
  prometheus:
    prometheusSpec:
      storageSpec:
        volumeClaimTemplate:
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 25Gi
      ruleSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      probeSelectorNilUsesHelmValues: false
      additionalScrapeConfigs:
        - job_name: 'asusrouter'
          scrape_interval: 5s
          static_configs:
            - targets: ['router.asus.com:9101']
