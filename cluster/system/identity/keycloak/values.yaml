global:
  additionalLabels: {}
  podAnnotations: {}
  podLabels: {}
  image:
    imagePullPolicy: IfNotPresent
server:
  name: server
  replicas: 1
  podAnnotations: {}
  podLabels: {}
  containerPort: 8080
  env:
    - name: KC_HOSTNAME
      value: "https://l.<secret:private-domain>"
    - name: KC_DB
      value: "postgres"
    - name: KC_DB_USERNAME
      valueFrom:
        secretKeyRef:
          name: keycloakdb-cnpg-app
          key: username
    - name: KC_DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: keycloakdb-cnpg-app
          key: password
    - name: KC_DB_URL_DATABASE
      value: app
    - name: KC_DB_URL_HOST
      value: keycloakdb-cnpg-rw
    - name: KC_FEATURES
      value: "docker"
    - name: KC_METRICS_ENABLED
      value: "true"
    - name: KC_HEALTH_ENABLED
      value: "true"
    - name: KC_HTTP_ENABLED
      value: "true"
    - name: KC_PROXY_HEADERS
      value: xforwarded
  envFrom: []
  image:
    imagePullPolicy: IfNotPresent
    repository: quay.io/keycloak/keycloak
    tag: "26.3.0@sha256:08a31919cfcd814bf1b465142b1a716c4d1a8830f772bb5c9dffcbd96de3fba6"
  service:
    type: ClusterIP
    servicePortHttpName: http
    servicePortHttp: 80
    namedTargetPort: true
  ingress:
    host: l.<secret:private-domain>
  readinessProbe:
    enabled: true
    failureThreshold: 10
    initialDelaySeconds: 20
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  livenessProbe:
    enabled: true
    failureThreshold: 10
    initialDelaySeconds: 20
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  resources: {}
postgres:
  - name: keycloakdb
    imageName: ghcr.io/cloudnative-pg/postgresql:16.6
    instances: 2
    storage:
      size: 2Gi
    # bootstrap:
    #   recovery:
    #     source: crunchy-cluster
    # externalClusters:
    #   - name: crunchy-cluster
    #     barmanObjectStore:
    #       serverName: keycloakdb-cnpg
    #       destinationPath: "s3://k8s-at-home-backup/cnpg/keycloak"
    #       endpointURL: <secret:s3_endpoint>
    #       s3Credentials:
    #         accessKeyId:
    #           name: keycloakdb-secrets
    #           key: S3_ACCESS_KEY_ID
    #         secretAccessKey:
    #           name: keycloakdb-secrets
    #           key: S3_ACCESS_SECRET_KEY
    monitoring:
      enablePodMonitor: true
    backup:
      retentionPolicy: "10d"
      barmanObjectStore:
        destinationPath: "s3://k8s-at-home-backup/cnpg/keycloak"
        endpointURL: <secret:s3_endpoint>
        s3Credentials:
          accessKeyId:
            name: keycloakdb-secrets
            key: S3_ACCESS_KEY_ID
          secretAccessKey:
            name: keycloakdb-secrets
            key: S3_ACCESS_SECRET_KEY
    scheduledBackups:
      - name: keycloakdb-cnpg-backup
        spec:
          immediate: true
          schedule: "55 0 0 * * *"
          backupOwnerReference: self
