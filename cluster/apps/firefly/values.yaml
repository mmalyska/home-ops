global:
  additionalLabels: {}
  podAnnotations: {}
  podLabels: {}
  image:
    imagePullPolicy: IfNotPresent
postgres:
  name: fireflydb
  instances: 1
  storage:
    size: 1Gi
  bootstrap:
    initdb:
      import:
        type: microservice
        databases:
          - fireflydb
        source:
          externalCluster: crunchy-cluster
  externalClusters:
    - name: crunchy-cluster
      connectionParameters:
        host: fireflydb-primary.firefly.svc
        user: fireflydb
        dbname: fireflydb
      password:
        name: fireflydb-pguser-fireflydb
        key: password
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: "10d"
    barmanObjectStore:
      destinationPath: "s3://k8s-at-home-backup/cnpg/firefly"
      endpointURL: <secret:s3_endpoint>
      s3Credentials:
        accessKeyId:
          name: firefly-secrets
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: firefly-secrets
          key: ACCESS_SECRET_KEY
  scheduledBackups:
    - name: fireflydb-cnpg-backup
      spec:
        immediate: true
        schedule: "0 0 0 * * *"
        backupOwnerReference: self
firefly-iii:
  # -- Set to false to not deploy Firefly III
  enabled: true
  image:
    repository: "fireflyiii/core"
    pullPolicy: IfNotPresent
    tag: version-5.6.14
  persistence:
    enabled: true
    class: ceph-block
    storage: 1Gi
  cronjob:
    enabled: true
    auth:
      existingSecret: firefly-secrets
  ingress:
    enabled: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      traefik.ingress.kubernetes.io/ingressEndpoint.hostname: "money.<secret:private-domain>"
      traefik.ingress.kubernetes.io/router.middlewares: oauth2-proxy-forward-auth@kubernetescrd
      kubernetes.io/ingress.class: traefik
    hosts:
      - "money.<secret:private-domain>"
    tls:
      - secretName: money-domain
        hosts:
          - money.<secret:private-domain>
  config:
    existingSecret: "firefly-secrets"
    env:
      DB_CONNECTION: pgsql
      DEFAULT_LANGUAGE: pl
      TZ: CET
      AUTHENTICATION_GUARD: "remote_user_guard"
      AUTHENTICATION_GUARD_HEADER: "HTTP_X_AUTH_REQUEST_PREFERRED_USERNAME"
      AUTHENTICATION_GUARD_EMAIL: "HTTP_X_AUTH_REQUEST_EMAIL"
      DB_DATABASE: app
      DB_HOST: fireflydb-cnpg-rw
    envValueFrom:
      DB_USERNAME:
        secretKeyRef:
          name: fireflydb-cnpg-app
          key: username
      DB_PASSWORD:
        secretKeyRef:
          name: fireflydb-cnpg-app
          key: password
importer:
  enabled: true
  env:
    DEFAULT_LANGUAGE: pl
    TZ: CET
    JSON_CONFIGURATION_DIR: "/configurations"
  fireflyiii:
    auth:
      existingSecret: firefly-importer-secrets
  ingress:
    enabled: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      traefik.ingress.kubernetes.io/ingressEndpoint.hostname: "money-import.<secret:private-domain>"
      traefik.ingress.kubernetes.io/router.middlewares: oauth2-proxy-forward-auth@kubernetescrd
      kubernetes.io/ingress.class: traefik
    hosts:
      - "money-import.<secret:private-domain>"
    tls:
      - secretName: money-import-domain
        hosts:
          - money-import.<secret:private-domain>
