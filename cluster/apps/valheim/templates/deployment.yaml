apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "valheim.fullname" . }}
  labels:
    {{- include "valheim.labels" (dict "context" . "component" .Values.server.name "name" .Values.server.name) | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "valheim.selectorLabels" (dict "context" . "name" .Values.server.name) | nindent 6 }}
  replicas: {{ .Values.server.replicas }}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        {{- include "valheim.checksumAnnotations" . | nindent 8 }}
        {{- with (mergeOverwrite (deepCopy .Values.global.podAnnotations) .Values.server.podAnnotations) }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "valheim.labels" (dict "context" . "component" .Values.server.name "name" .Values.server.name) | nindent 8 }}
        {{- with (mergeOverwrite (deepCopy .Values.global.podLabels) .Values.server.podLabels) }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.server.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - image: {{ default .Values.global.image.repository .Values.server.image.repository }}:{{ default (include "valheim.defaultTag" .) .Values.server.image.tag }}
          imagePullPolicy: {{ default .Values.global.image.imagePullPolicy .Values.server.image.imagePullPolicy }}
          name: {{ .Values.server.name }}
          env:
            - name: SERVER_NAME
              value: {{ .Values.server.browserName }}
            - name: WORLD_NAME
              value: {{ .Values.server.worldName }}
            {{ if .Values.server.passwordSecret -}}
            - name: SERVER_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.server.passwordSecret }}
                  key: password
                  optional: false
            {{ else if .Values.server.password -}}
            - name: SERVER_PASS
              value: {{ .Values.server.password }}
            {{ else -}}
            - name: SERVER_PASS
              value: "password"
            {{end -}}
            - name: SERVER_PORT
              value: {{ .Values.server.networking.gamePort | quote }}
            {{- if .Values.server.extraEnvironmentVars }}
              {{- range $key, $value := .Values.server.extraEnvironmentVars }}
            - name: {{ $key }}
              value: {{ $value | quote }}
              {{- end -}}
            {{ end }}
          ports:
            - containerPort: {{ .Values.server.networking.gamePort | int }}
              name: gameport
              protocol: UDP
            - containerPort: {{ .Values.server.networking.queryport | int }}
              name: queryport
              protocol: UDP
            - containerPort: 80
              name: statusport
          volumeMounts:
            {{- if .Values.server.storage.config.enabled }}
            - mountPath: /config
              name: config
            {{- end -}}
            {{- if .Values.server.storage.gamefiles.enabled }}
            - mountPath: /opt/valheim
              name: serverfiles
            {{- end -}}
            {{ range .Values.server.storage.extraVolumes }}
            - name: {{ .name }}
              readOnly: true
              mountPath: /extraVolumes/{{ .name }}
            {{ end }}
          {{- if .Values.server.resources }}
          resources: {{- toYaml .Values.server.resources | nindent 10 }}
          {{- end }}
      volumes:
        {{- if .Values.server.storage.config.enabled }}
        - name: config
          persistentVolumeClaim:
            claimName: {{ template "valheim.fullname" . }}-world-data
        {{- end -}}
        {{- if .Values.server.storage.gamefiles.enabled }}
        - name: serverfiles
          persistentVolumeClaim:
            claimName: {{ template "valheim.fullname" . }}-server-base-data
        {{- end -}}
        {{ range .Values.server.storage.extraVolumes }}
        - name: {{ .name }}
          {{ .type }}:
            {{ if (eq .type "configMap") }}
            name: {{ .name }}
            {{ else if (eq .type "secret") }}
            secretName: {{ .name }}
            {{ if .defaultMode }}
            defaultMode: {{ .defaultMode }}
            {{ end }}
            {{ end }}
        {{ end }}
